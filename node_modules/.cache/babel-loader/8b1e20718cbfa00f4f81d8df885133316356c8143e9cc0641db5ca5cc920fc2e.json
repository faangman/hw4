{"ast":null,"code":"var _jsxFileName = \"/Users/faang.net/Desktop/incubator/hw4/src/HW/4/Input.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = props => {\n  const onChangeHandler = event => {\n    props.setCurrentText(event.currentTarget.value); // НУЖНО ДОПИСАТЬ\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    id: 'hw04-input',\n    type: \"text\",\n    value: props.currentText,\n    onChange: onChangeHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 4\n  }, this);\n};\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Input","props","onChangeHandler","event","setCurrentText","currentTarget","value","_jsxDEV","id","type","currentText","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/faang.net/Desktop/incubator/hw4/src/HW/4/Input.tsx"],"sourcesContent":["import {ChangeEvent} from \"react\";\n\ntype InputPropsType = {\n\tcurrentText: string // НУЖНО ПРОТИПИЗИРОВАТЬ\n\tsetCurrentText: (task: string) => void // НУЖНО ПРОТИПИЗИРОВАТЬ\n};\n\nexport const Input = (props: InputPropsType) => {\n\tconst onChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tprops.setCurrentText(event.currentTarget.value)// НУЖНО ДОПИСАТЬ\n\t};\n\n\treturn (\n\t  <input id={'hw04-input'} type=\"text\" value={props.currentText} onChange={onChangeHandler} />\n\t);\n};\n"],"mappings":";;AAOA,OAAO,MAAMA,KAAK,GAAIC,KAAqB,IAAK;EAC/C,MAAMC,eAAe,GAAIC,KAAoC,IAAK;IACjEF,KAAK,CAACG,cAAc,CAACD,KAAK,CAACE,aAAa,CAACC,KAAK,CAAC;EAChD,CAAC;;EAED,oBACEC,OAAA;IAAOC,EAAE,EAAE,YAAa;IAACC,IAAI,EAAC,MAAM;IAACH,KAAK,EAAEL,KAAK,CAACS,WAAY;IAACC,QAAQ,EAAET;EAAgB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE/F,CAAC;AAACC,EAAA,GARWhB,KAAK;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}